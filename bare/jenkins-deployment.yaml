# https://github.com/marcel-dempers/docker-development-youtube-series/tree/master/jenkins
# RUN "jenkins-rbac.yaml" FIRST
---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: jenkins
  labels:
    app: jenkins
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: jenkins
        tier: frontend
    spec:
      serviceAccountName: jenkins
      # hostNetwork: true
      # hostPID: true
      containers:
      - name: jenkins
        image: registry.dellius.app:5000/jenkins:lts-centos
        imagePullPolicy: Always
        resources:
          limits:
            memory: 2048Mi
            cpu: 500m
          requests:
            cpu: 250m
            memory: 1024Mi
        env:
        - name: DOCKER_HOST
          value: unix://var/run/docker.sock
        - name: PROJECT_REPO_MAIN
          value: https://github.com/dellius-alexander/Testing-Strategy.git
        - name: JAVA_OPTS
          value: -Xmx2048m -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85 
        - name: JENKINS_UC
          value: https://updates.jenkins.io/update-center.json
        - name: KUBECONFIG
          value: /var/jenkins_home/secrets/kubeconfig
        - name: JENKINS_PORT #disable HTTP
          value: '-1'
          #configure HTTPS
        - name: JENKINS_HTTPS_PORT
          value: "8443"
        - name: JENKINS_HTTPS_KEYSTORE
          value: "/etc/jenkins/jenkins_keystore.jks"
        - name: JENKINS_HTTPS_KEYSTORE_PASSWORD
          value: 'U2FyYWlAMjAwOQ=='
        - name: JENKINS_HTTPS_LISTEN_ADDRESS
          value: '127.0.0.1'
        ports:
        - containerPort: 50000
          protocol: TCP
        - containerPort: 80
          protocol: TCP
        - containerPort: 443
          protocol: TCP
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-data
        - mountPath: /var/run/docker.sock
          name: docker-host
      restartPolicy: Always
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 30
      volumes:
      - name: jenkins-data
        # emptyDir: {}  # Data is not persisted across pod failures
        persistentVolumeClaim:    # Data is persisted across pod failures
          claimName: jenkins-pvc
      - name: docker-host
        hostPath:
          path: /var/run/docker.sock


---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: jenkins-autoscaler
  namespace: jenkins
  labels:
    app: jenkins
    #tier: frontend
spec:
  maxReplicas: 2
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: jenkins-deployment
  targetCPUUtilizationPercentage: 25
status:
  observedGeneration: 1
  currentReplicas: 1
  desiredReplicas: 1

---

apiVersion: v1
kind: Service
metadata:
  name: jenkins-svc
  namespace: jenkins
  labels:
    app: jenkins
spec:
  selector:
    app: jenkins
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
      #nodePort: 32003
    - name: https
      port: 443
      targetPort: 443
      protocol: TCP
    - name: slave
      port: 50000
      targetPort: 50000
  externalIPs:
    - 10.0.0.40
